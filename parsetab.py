
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA DIVIDE DO ELSE EQUALEQ EQUALS FLOAT FOR FUNCTION GREATER GREATEREQ ID IF INPUT INT LCURLY LESS LESSEQ LPAREN LSQUARED MINUS MINUSMINUS MOD NOTEQ NUMBER OR PARENS PLUS PLUSPLUS POWER PRINT PRINTQ PRINTS RCURLY RETURN RPAREN RSQUARED SEMIC STRING TIMES WHILEmain : block main\n            | blockblock : declaration\n             | function\n             | assignment\n             | callfunction\n             | expressions\n             | if\n             | while\n             | dowhile\n             | for\n             | print\n             | input\n             | printq\n             | prints\n             | return declaration : type ids\n                   | type arraystype : INT\n            | FLOATids : sorm COMMA ids\n           | sormsorm : moreids\n            | subdeclaremoreids : IDsubdeclare : assignmentarrays : arrayorsub COMMA arrays\n              | arrayorsubarrayorsub : array \n                  | subdeclaremarray : ID argsargs : LSQUARED expression RSQUARED args\n            | LSQUARED expression RSQUAREDsubdeclarem : ID args EQUALS arrvaluearrvalue : LCURLY value RCURLYvalue : numberorid COMMA value\n             | numberoridfunction : functionaux LCURLY main RCURLYreturn : RETURNfunctionaux : FUNCTION ID PARENSassignment : normalassignment \n                  | plusplus\n                  | minusminusnormalassignment : idorarrayid EQUALS expressionidorarrayid : ID\n                   | arrayidplusplus : ID PLUSPLUSminusminus : ID MINUSMINUScallfunction : ID PARENSexpression : expression PLUS termexpression : expression MINUS termexpression : expression OR termexpression : termterm : term POWER factorterm : term TIMES factorterm : term DIVIDE factorterm : term MOD factorterm : term AND factorterm : factorfactor : numberoridfactor : LPAREN expression RPARENfactor : numberorid GREATER numberoridfactor : numberorid LESS numberoridfactor : numberorid GREATEREQ numberoridfactor : numberorid LESSEQ numberoridfactor : numberorid EQUALEQ numberoridfactor : numberorid NOTEQ numberoridnumberorid : NUMBER \n                  | ID\n                  | arrayidarrayid : ID argsif : IF LPAREN expression RPAREN if_aux1 LCURLY main RCURLY elseelse : ELSE if_aux2 LCURLY main RCURLY\n            | ELSE if_aux2 block\n            | emptyif_aux1 : emptyif_aux2 : emptywhile : WHILE while_aux1 LPAREN expression RPAREN while_aux2 LCURLY main RCURLYwhile_aux1 : emptywhile_aux2 : emptydowhile : DO do_aux LCURLY main RCURLY WHILE LPAREN expression RPAREN SEMICdo_aux : emptyfor : FOR LPAREN assignordeclare SEMIC expression SEMIC foraux1 assignment foraux2 RPAREN LCURLY main RCURLYassignordeclare : assignment\n                       | declarationforaux1 : emptyforaux2 : emptyprint : PRINT printaux LPAREN expressions RPARENprints : PRINTS printaux LPAREN expressions RPARENprintaux : emptyexpressions : stringorexpression COMMA expressions\n                   | stringorexpressionstringorexpression : string\n                          | expressionstring : STRINGinput : INPUT LPAREN input_ids RPARENinput_ids : numberorid COMMA input_ids\n                 | numberoridempty :printq : PRINTQ PARENS'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,26,34,35,36,37,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,67,68,69,70,71,76,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,104,105,106,107,112,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,139,141,142,144,145,146,147,153,155,158,162,163,164,166,167,168,169,171,175,176,177,178,182,183,184,186,187,188,191,192,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,55,-41,-42,-43,-69,-92,67,-94,-39,-19,-20,82,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,22,-49,-47,-48,-71,67,67,67,-69,-70,67,67,67,111,67,-100,67,67,67,67,67,67,67,67,67,67,67,67,130,132,-31,-91,-61,-50,-51,-52,67,22,67,67,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,67,-96,67,-31,-34,67,-32,-88,-89,22,-99,-35,67,22,67,111,-86,-99,-72,-99,-75,-78,22,-77,-81,22,-74,22,-73,-83,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,24,-49,-47,-48,-71,-69,-70,-100,-31,-91,-61,-50,-51,-52,24,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,24,-35,24,-99,-72,-99,-75,-78,24,-77,-81,24,-74,24,-73,-83,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,151,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,27,-49,-47,-48,-71,-69,-70,-100,-31,-91,-61,-50,-51,-52,27,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,161,-88,-89,27,-35,27,-99,-72,-99,-75,-78,27,-77,-81,27,-74,27,-73,-83,]),'DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,28,-49,-47,-48,-71,-69,-70,-100,-31,-91,-61,-50,-51,-52,28,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,28,-35,28,-99,-72,-99,-75,-78,28,-77,-81,28,-74,28,-73,-83,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,29,-49,-47,-48,-71,-69,-70,-100,-31,-91,-61,-50,-51,-52,29,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,29,-35,29,-99,-72,-99,-75,-78,29,-77,-81,29,-74,29,-73,-83,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,30,-49,-47,-48,-71,-69,-70,-100,-31,-91,-61,-50,-51,-52,30,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,30,-35,30,-99,-72,-99,-75,-78,30,-77,-81,30,-74,30,-73,-83,]),'INPUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,31,-49,-47,-48,-71,-69,-70,-100,-31,-91,-61,-50,-51,-52,31,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,31,-35,31,-99,-72,-99,-75,-78,31,-77,-81,31,-74,31,-73,-83,]),'PRINTQ':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,32,-49,-47,-48,-71,-69,-70,-100,-31,-91,-61,-50,-51,-52,32,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,32,-35,32,-99,-72,-99,-75,-78,32,-77,-81,32,-74,32,-73,-83,]),'PRINTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,33,-49,-47,-48,-71,-69,-70,-100,-31,-91,-61,-50,-51,-52,33,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,33,-35,33,-99,-72,-99,-75,-78,33,-77,-81,33,-74,33,-73,-83,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,34,-49,-47,-48,-71,-69,-70,-100,-31,-91,-61,-50,-51,-52,34,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,34,-35,34,-99,-72,-99,-75,-78,34,-77,-81,34,-74,34,-73,-83,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,76,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,35,-49,-47,-48,-71,-69,-70,35,-100,-31,-91,-61,-50,-51,-52,35,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,35,-35,35,-99,-72,-99,-75,-78,35,-77,-81,35,-74,35,-73,-83,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,76,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,36,-49,-47,-48,-71,-69,-70,36,-100,-31,-91,-61,-50,-51,-52,36,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,36,-35,36,-99,-72,-99,-75,-78,36,-77,-81,36,-74,36,-73,-83,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,67,68,80,97,100,102,103,104,105,107,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,37,-49,-47,-48,-71,-69,-70,-100,-31,-91,-61,-50,-51,-52,37,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,37,-35,37,-99,-72,-99,-75,-78,37,-77,-81,37,-74,37,-73,-83,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,64,67,68,80,97,100,102,103,104,105,107,112,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,158,163,166,171,175,176,177,178,182,183,184,186,187,188,191,192,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,41,-49,-47,-48,-71,41,-69,-70,-100,-31,-91,-61,-50,-51,-52,41,41,41,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,41,-35,41,-99,-72,-99,-75,-78,41,-77,-81,41,-74,41,-73,-83,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,33,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,77,78,80,81,83,84,85,86,87,88,97,100,102,103,104,105,106,107,112,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,139,141,144,145,147,153,155,158,161,163,166,167,171,175,176,177,178,182,183,184,186,187,188,191,192,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,65,25,-94,-99,76,-99,79,-99,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,25,-49,-47,-48,-71,25,25,25,-69,-70,25,25,25,106,-79,112,-90,-100,115,25,25,25,25,25,25,-31,-91,-61,-50,-51,-52,25,25,25,25,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,25,-96,-31,-34,-32,-88,-89,25,167,-35,25,25,-99,-72,-99,-75,-78,25,-77,-81,25,-74,25,-73,-83,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,25,26,34,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,67,68,69,70,71,79,80,83,84,85,86,87,88,89,90,91,92,93,94,97,100,102,103,104,105,106,107,112,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,139,141,142,144,145,146,147,153,155,158,163,164,166,167,171,175,176,177,178,182,183,184,186,187,188,191,192,],[45,45,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,45,-94,-39,-93,-70,-95,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,45,-49,-47,-48,-71,45,45,45,-69,-70,45,45,45,45,-100,45,45,45,45,45,45,45,45,45,45,45,45,-31,-91,-61,-50,-51,-52,45,45,45,45,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,45,-96,45,-31,-34,45,-32,-88,-89,45,-35,45,45,45,-99,-72,-99,-75,-78,45,-77,-81,45,-74,45,-73,-83,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,67,68,80,97,100,102,103,104,105,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,141,144,145,147,153,155,163,171,175,177,178,184,187,191,192,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-1,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,-49,-47,-48,-71,-69,-70,-100,-31,-91,-61,-50,-51,-52,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,-96,-31,-34,-32,-88,-89,-35,-99,-72,-75,-78,-81,-74,-73,-83,]),'RCURLY':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,26,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,67,68,80,97,98,100,102,103,104,105,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,138,141,144,145,147,153,155,156,157,163,165,170,171,172,175,177,178,184,187,189,190,191,192,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-41,-42,-43,-69,-92,-94,-39,-93,-70,-95,-53,-59,-60,-68,-1,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,-49,-47,-48,-71,-69,-70,-100,-31,134,-91,-61,-50,-51,-52,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-38,-33,151,-96,-31,-34,-32,-88,-89,163,-37,-35,171,-36,-99,178,-72,-75,-78,-81,-74,191,192,-73,-83,]),'LCURLY':([18,28,74,75,116,133,136,148,149,150,159,160,176,182,183,185,],[58,-99,107,-82,-40,146,-99,158,-76,-99,166,-80,-99,186,-77,188,]),'COMMA':([19,20,21,22,23,26,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,60,61,62,67,68,97,102,103,104,105,114,117,118,119,120,121,122,123,124,125,126,127,128,130,135,144,145,147,157,163,],[-41,-42,-43,-69,64,-94,-93,-70,-95,-53,-59,-60,-68,95,96,-23,-24,-29,-30,-25,-26,-47,-48,-71,-69,-70,-31,-61,-50,-51,-52,142,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-25,-33,-31,-34,-32,164,-35,]),'SEMIC':([19,20,21,42,43,44,45,47,48,49,50,51,52,53,54,55,56,60,61,62,67,68,97,102,103,104,105,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,144,145,147,152,163,179,],[-41,-42,-43,-53,-59,-60,-68,-17,-18,-22,-28,-23,-24,-29,-30,-25,-26,-47,-48,-71,-69,-70,-31,-61,-50,-51,-52,139,-84,-85,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-21,-25,-27,-33,-31,-34,-32,162,-35,184,]),'RPAREN':([19,20,21,23,26,39,41,42,43,44,45,60,61,62,66,67,68,100,101,102,103,104,105,113,114,117,118,119,120,121,122,123,124,125,126,127,128,135,137,140,143,147,154,173,174,180,181,],[-41,-42,-43,-92,-94,-93,-95,-53,-59,-60,-68,-47,-48,-71,102,-69,-70,-91,136,-61,-50,-51,-52,141,-98,-44,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-33,150,153,155,-32,-97,179,-99,185,-87,]),'PARENS':([22,32,82,],[59,80,116,]),'PLUSPLUS':([22,55,111,130,],[60,60,60,60,]),'MINUSMINUS':([22,55,111,130,],[61,61,61,61,]),'EQUALS':([22,38,40,55,57,62,97,111,130,135,144,147,],[-45,83,-46,-45,-46,-71,133,-45,-45,-33,133,-32,]),'GREATER':([22,40,44,45,62,67,68,135,147,],[-69,-70,89,-68,-71,-69,-70,-33,-32,]),'LESS':([22,40,44,45,62,67,68,135,147,],[-69,-70,90,-68,-71,-69,-70,-33,-32,]),'GREATEREQ':([22,40,44,45,62,67,68,135,147,],[-69,-70,91,-68,-71,-69,-70,-33,-32,]),'LESSEQ':([22,40,44,45,62,67,68,135,147,],[-69,-70,92,-68,-71,-69,-70,-33,-32,]),'EQUALEQ':([22,40,44,45,62,67,68,135,147,],[-69,-70,93,-68,-71,-69,-70,-33,-32,]),'NOTEQ':([22,40,44,45,62,67,68,135,147,],[-69,-70,94,-68,-71,-69,-70,-33,-32,]),'POWER':([22,40,42,43,44,45,62,67,68,102,103,104,105,118,119,120,121,122,123,124,125,126,127,128,135,147,],[-69,-70,84,-59,-60,-68,-71,-69,-70,-61,84,84,84,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-33,-32,]),'TIMES':([22,40,42,43,44,45,62,67,68,102,103,104,105,118,119,120,121,122,123,124,125,126,127,128,135,147,],[-69,-70,85,-59,-60,-68,-71,-69,-70,-61,85,85,85,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-33,-32,]),'DIVIDE':([22,40,42,43,44,45,62,67,68,102,103,104,105,118,119,120,121,122,123,124,125,126,127,128,135,147,],[-69,-70,86,-59,-60,-68,-71,-69,-70,-61,86,86,86,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-33,-32,]),'MOD':([22,40,42,43,44,45,62,67,68,102,103,104,105,118,119,120,121,122,123,124,125,126,127,128,135,147,],[-69,-70,87,-59,-60,-68,-71,-69,-70,-61,87,87,87,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-33,-32,]),'AND':([22,40,42,43,44,45,62,67,68,102,103,104,105,118,119,120,121,122,123,124,125,126,127,128,135,147,],[-69,-70,88,-59,-60,-68,-71,-69,-70,-61,88,88,88,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-33,-32,]),'PLUS':([22,26,40,42,43,44,45,62,66,67,68,99,101,102,103,104,105,117,118,119,120,121,122,123,124,125,126,127,128,135,137,147,152,173,],[-69,69,-70,-53,-59,-60,-68,-71,69,-69,-70,69,69,-61,-50,-51,-52,69,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-33,69,-32,69,69,]),'MINUS':([22,26,40,42,43,44,45,62,66,67,68,99,101,102,103,104,105,117,118,119,120,121,122,123,124,125,126,127,128,135,137,147,152,173,],[-69,70,-70,-53,-59,-60,-68,-71,70,-69,-70,70,70,-61,-50,-51,-52,70,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-33,70,-32,70,70,]),'OR':([22,26,40,42,43,44,45,62,66,67,68,99,101,102,103,104,105,117,118,119,120,121,122,123,124,125,126,127,128,135,137,147,152,173,],[-69,71,-70,-53,-59,-60,-68,-71,71,-69,-70,71,71,-61,-50,-51,-52,71,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-33,71,-32,71,71,]),'LSQUARED':([22,55,67,111,130,132,135,],[63,63,63,63,63,63,63,]),'RSQUARED':([42,43,44,45,62,67,68,99,102,103,104,105,118,119,120,121,122,123,124,125,126,127,128,135,147,],[-53,-59,-60,-68,-71,-69,-70,135,-61,-50,-51,-52,-54,-55,-56,-57,-58,-62,-63,-64,-65,-66,-67,-33,-32,]),'ELSE':([171,],[176,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,2,58,107,158,166,186,188,],[1,46,98,138,165,172,189,190,]),'block':([0,2,58,107,158,166,182,186,188,],[2,2,2,2,2,2,187,2,2,]),'declaration':([0,2,58,76,107,158,166,182,186,188,],[3,3,3,110,3,3,3,3,3,3,]),'function':([0,2,58,107,158,166,182,186,188,],[4,4,4,4,4,4,4,4,4,]),'assignment':([0,2,17,58,76,95,107,158,166,168,182,186,188,],[5,5,56,5,109,56,5,5,5,174,5,5,5,]),'callfunction':([0,2,58,107,158,166,182,186,188,],[6,6,6,6,6,6,6,6,6,]),'expressions':([0,2,58,64,107,112,115,158,166,182,186,188,],[7,7,7,100,7,140,143,7,7,7,7,7,]),'if':([0,2,58,107,158,166,182,186,188,],[8,8,8,8,8,8,8,8,8,]),'while':([0,2,58,107,158,166,182,186,188,],[9,9,9,9,9,9,9,9,9,]),'dowhile':([0,2,58,107,158,166,182,186,188,],[10,10,10,10,10,10,10,10,10,]),'for':([0,2,58,107,158,166,182,186,188,],[11,11,11,11,11,11,11,11,11,]),'print':([0,2,58,107,158,166,182,186,188,],[12,12,12,12,12,12,12,12,12,]),'input':([0,2,58,107,158,166,182,186,188,],[13,13,13,13,13,13,13,13,13,]),'printq':([0,2,58,107,158,166,182,186,188,],[14,14,14,14,14,14,14,14,14,]),'prints':([0,2,58,107,158,166,182,186,188,],[15,15,15,15,15,15,15,15,15,]),'return':([0,2,58,107,158,166,182,186,188,],[16,16,16,16,16,16,16,16,16,]),'type':([0,2,58,76,107,158,166,182,186,188,],[17,17,17,17,17,17,17,17,17,17,]),'functionaux':([0,2,58,107,158,166,182,186,188,],[18,18,18,18,18,18,18,18,18,]),'normalassignment':([0,2,17,58,76,95,107,158,166,168,182,186,188,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'plusplus':([0,2,17,58,76,95,107,158,166,168,182,186,188,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'minusminus':([0,2,17,58,76,95,107,158,166,168,182,186,188,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'stringorexpression':([0,2,58,64,107,112,115,158,166,182,186,188,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'expression':([0,2,25,58,63,64,65,83,106,107,112,115,139,158,166,167,182,186,188,],[26,26,66,26,99,26,101,117,137,26,26,26,152,26,26,173,26,26,26,]),'idorarrayid':([0,2,17,58,76,95,107,158,166,168,182,186,188,],[38,38,38,38,38,38,38,38,38,38,38,38,38,]),'string':([0,2,58,64,107,112,115,158,166,182,186,188,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'arrayid':([0,2,17,25,58,63,64,65,69,70,71,76,79,83,84,85,86,87,88,89,90,91,92,93,94,95,106,107,112,115,139,142,146,158,164,166,167,168,182,186,188,],[40,40,57,68,40,68,68,68,68,68,68,57,68,68,68,68,68,68,68,68,68,68,68,68,68,57,68,40,68,68,68,68,68,40,68,40,68,57,40,40,40,]),'term':([0,2,25,58,63,64,65,69,70,71,83,106,107,112,115,139,158,166,167,182,186,188,],[42,42,42,42,42,42,42,103,104,105,42,42,42,42,42,42,42,42,42,42,42,42,]),'factor':([0,2,25,58,63,64,65,69,70,71,83,84,85,86,87,88,106,107,112,115,139,158,166,167,182,186,188,],[43,43,43,43,43,43,43,43,43,43,43,118,119,120,121,122,43,43,43,43,43,43,43,43,43,43,43,]),'numberorid':([0,2,25,58,63,64,65,69,70,71,79,83,84,85,86,87,88,89,90,91,92,93,94,106,107,112,115,139,142,146,158,164,166,167,182,186,188,],[44,44,44,44,44,44,44,44,44,44,114,44,44,44,44,44,44,123,124,125,126,127,128,44,44,44,44,44,114,157,44,157,44,44,44,44,44,]),'ids':([17,95,],[47,129,]),'arrays':([17,96,],[48,131,]),'sorm':([17,95,],[49,49,]),'arrayorsub':([17,96,],[50,50,]),'moreids':([17,95,],[51,51,]),'subdeclare':([17,95,],[52,52,]),'array':([17,96,],[53,53,]),'subdeclarem':([17,96,],[54,54,]),'args':([22,55,67,111,130,132,135,],[62,97,62,62,62,144,147,]),'while_aux1':([27,],[72,]),'empty':([27,28,30,33,136,150,162,171,174,176,],[73,75,78,78,149,160,169,177,181,183,]),'do_aux':([28,],[74,]),'printaux':([30,33,],[77,81,]),'assignordeclare':([76,],[108,]),'input_ids':([79,142,],[113,154,]),'arrvalue':([133,],[145,]),'if_aux1':([136,],[148,]),'value':([146,164,],[156,170,]),'while_aux2':([150,],[159,]),'foraux1':([162,],[168,]),'else':([171,],[175,]),'foraux2':([174,],[180,]),'if_aux2':([176,],[182,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> block main','main',2,'p_main','syntax.py',19),
  ('main -> block','main',1,'p_main','syntax.py',20),
  ('block -> declaration','block',1,'p_block','syntax.py',25),
  ('block -> function','block',1,'p_block','syntax.py',26),
  ('block -> assignment','block',1,'p_block','syntax.py',27),
  ('block -> callfunction','block',1,'p_block','syntax.py',28),
  ('block -> expressions','block',1,'p_block','syntax.py',29),
  ('block -> if','block',1,'p_block','syntax.py',30),
  ('block -> while','block',1,'p_block','syntax.py',31),
  ('block -> dowhile','block',1,'p_block','syntax.py',32),
  ('block -> for','block',1,'p_block','syntax.py',33),
  ('block -> print','block',1,'p_block','syntax.py',34),
  ('block -> input','block',1,'p_block','syntax.py',35),
  ('block -> printq','block',1,'p_block','syntax.py',36),
  ('block -> prints','block',1,'p_block','syntax.py',37),
  ('block -> return','block',1,'p_block','syntax.py',38),
  ('declaration -> type ids','declaration',2,'p_declaration','syntax.py',43),
  ('declaration -> type arrays','declaration',2,'p_declaration','syntax.py',44),
  ('type -> INT','type',1,'p_type','syntax.py',49),
  ('type -> FLOAT','type',1,'p_type','syntax.py',50),
  ('ids -> sorm COMMA ids','ids',3,'p_ids','syntax.py',55),
  ('ids -> sorm','ids',1,'p_ids','syntax.py',56),
  ('sorm -> moreids','sorm',1,'p_sorm','syntax.py',58),
  ('sorm -> subdeclare','sorm',1,'p_sorm','syntax.py',59),
  ('moreids -> ID','moreids',1,'p_moreids','syntax.py',61),
  ('subdeclare -> assignment','subdeclare',1,'p_subdeclare','syntax.py',64),
  ('arrays -> arrayorsub COMMA arrays','arrays',3,'p_arrays','syntax.py',71),
  ('arrays -> arrayorsub','arrays',1,'p_arrays','syntax.py',72),
  ('arrayorsub -> array','arrayorsub',1,'p_arrayorsub','syntax.py',74),
  ('arrayorsub -> subdeclarem','arrayorsub',1,'p_arrayorsub','syntax.py',75),
  ('array -> ID args','array',2,'p_array','syntax.py',78),
  ('args -> LSQUARED expression RSQUARED args','args',4,'p_args','syntax.py',89),
  ('args -> LSQUARED expression RSQUARED','args',3,'p_args','syntax.py',90),
  ('subdeclarem -> ID args EQUALS arrvalue','subdeclarem',4,'p_subdeclarem','syntax.py',95),
  ('arrvalue -> LCURLY value RCURLY','arrvalue',3,'p_arrvalue','syntax.py',119),
  ('value -> numberorid COMMA value','value',3,'p_value','syntax.py',122),
  ('value -> numberorid','value',1,'p_value','syntax.py',123),
  ('function -> functionaux LCURLY main RCURLY','function',4,'p_function','syntax.py',130),
  ('return -> RETURN','return',1,'p_return','syntax.py',139),
  ('functionaux -> FUNCTION ID PARENS','functionaux',3,'p_functionaux','syntax.py',146),
  ('assignment -> normalassignment','assignment',1,'p_assignment','syntax.py',157),
  ('assignment -> plusplus','assignment',1,'p_assignment','syntax.py',158),
  ('assignment -> minusminus','assignment',1,'p_assignment','syntax.py',159),
  ('normalassignment -> idorarrayid EQUALS expression','normalassignment',3,'p_normalassignment','syntax.py',163),
  ('idorarrayid -> ID','idorarrayid',1,'p_idorarrayid','syntax.py',173),
  ('idorarrayid -> arrayid','idorarrayid',1,'p_idorarrayid','syntax.py',174),
  ('plusplus -> ID PLUSPLUS','plusplus',2,'p_plusplus','syntax.py',178),
  ('minusminus -> ID MINUSMINUS','minusminus',2,'p_minusminus','syntax.py',186),
  ('callfunction -> ID PARENS','callfunction',2,'p_callfunction','syntax.py',195),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','syntax.py',203),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','syntax.py',218),
  ('expression -> expression OR term','expression',3,'p_expression_or','syntax.py',234),
  ('expression -> term','expression',1,'p_expression_term','syntax.py',249),
  ('term -> term POWER factor','term',3,'p_term_power','syntax.py',254),
  ('term -> term TIMES factor','term',3,'p_term_times','syntax.py',269),
  ('term -> term DIVIDE factor','term',3,'p_term_div','syntax.py',284),
  ('term -> term MOD factor','term',3,'p_term_mod','syntax.py',299),
  ('term -> term AND factor','term',3,'p_term_eq','syntax.py',314),
  ('term -> factor','term',1,'p_term_factor','syntax.py',329),
  ('factor -> numberorid','factor',1,'p_factor_numorid','syntax.py',333),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','syntax.py',336),
  ('factor -> numberorid GREATER numberorid','factor',3,'p_factor_greater','syntax.py',339),
  ('factor -> numberorid LESS numberorid','factor',3,'p_factor_less','syntax.py',354),
  ('factor -> numberorid GREATEREQ numberorid','factor',3,'p_factor_greatere','syntax.py',369),
  ('factor -> numberorid LESSEQ numberorid','factor',3,'p_factor_lesse','syntax.py',384),
  ('factor -> numberorid EQUALEQ numberorid','factor',3,'p_factor_equale','syntax.py',399),
  ('factor -> numberorid NOTEQ numberorid','factor',3,'p_factor_not','syntax.py',414),
  ('numberorid -> NUMBER','numberorid',1,'p_numberorid','syntax.py',429),
  ('numberorid -> ID','numberorid',1,'p_numberorid','syntax.py',430),
  ('numberorid -> arrayid','numberorid',1,'p_numberorid','syntax.py',431),
  ('arrayid -> ID args','arrayid',2,'p_arrayid','syntax.py',435),
  ('if -> IF LPAREN expression RPAREN if_aux1 LCURLY main RCURLY else','if',9,'p_if','syntax.py',448),
  ('else -> ELSE if_aux2 LCURLY main RCURLY','else',5,'p_else','syntax.py',456),
  ('else -> ELSE if_aux2 block','else',3,'p_else','syntax.py',457),
  ('else -> empty','else',1,'p_else','syntax.py',458),
  ('if_aux1 -> empty','if_aux1',1,'p_if_aux1','syntax.py',461),
  ('if_aux2 -> empty','if_aux2',1,'p_if_aux2','syntax.py',471),
  ('while -> WHILE while_aux1 LPAREN expression RPAREN while_aux2 LCURLY main RCURLY','while',9,'p_while','syntax.py',484),
  ('while_aux1 -> empty','while_aux1',1,'p_while_aux1','syntax.py',497),
  ('while_aux2 -> empty','while_aux2',1,'p_while_aux2','syntax.py',502),
  ('dowhile -> DO do_aux LCURLY main RCURLY WHILE LPAREN expression RPAREN SEMIC','dowhile',10,'p_dowhile','syntax.py',515),
  ('do_aux -> empty','do_aux',1,'p_do_aux','syntax.py',525),
  ('for -> FOR LPAREN assignordeclare SEMIC expression SEMIC foraux1 assignment foraux2 RPAREN LCURLY main RCURLY','for',13,'p_for','syntax.py',532),
  ('assignordeclare -> assignment','assignordeclare',1,'p_assignordeclare','syntax.py',544),
  ('assignordeclare -> declaration','assignordeclare',1,'p_assignordeclare','syntax.py',545),
  ('foraux1 -> empty','foraux1',1,'p_foraux1','syntax.py',548),
  ('foraux2 -> empty','foraux2',1,'p_foraux2','syntax.py',561),
  ('print -> PRINT printaux LPAREN expressions RPAREN','print',5,'p_print','syntax.py',575),
  ('prints -> PRINTS printaux LPAREN expressions RPAREN','prints',5,'p_prints','syntax.py',588),
  ('printaux -> empty','printaux',1,'p_printaux','syntax.py',600),
  ('expressions -> stringorexpression COMMA expressions','expressions',3,'p_expressions','syntax.py',605),
  ('expressions -> stringorexpression','expressions',1,'p_expressions','syntax.py',606),
  ('stringorexpression -> string','stringorexpression',1,'p_stringorexpression','syntax.py',610),
  ('stringorexpression -> expression','stringorexpression',1,'p_stringorexpression','syntax.py',611),
  ('string -> STRING','string',1,'p_string','syntax.py',616),
  ('input -> INPUT LPAREN input_ids RPAREN','input',4,'p_input','syntax.py',620),
  ('input_ids -> numberorid COMMA input_ids','input_ids',3,'p_input_ids','syntax.py',634),
  ('input_ids -> numberorid','input_ids',1,'p_input_ids','syntax.py',635),
  ('empty -> <empty>','empty',0,'p_empty','syntax.py',656),
  ('printq -> PRINTQ PARENS','printq',2,'p_printq','syntax.py',661),
]
